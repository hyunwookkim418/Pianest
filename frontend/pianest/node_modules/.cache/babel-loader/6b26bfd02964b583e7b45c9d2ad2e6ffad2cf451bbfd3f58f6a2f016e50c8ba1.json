{"ast":null,"code":"var _jsxFileName = \"/Users/jinendramalekar/Desktop/Pianest/frontend/pianest/src/components/AdminLogin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminLogin() {\n  _s();\n  const notify = message => toast.error(message);\n  const navigate = useNavigate();\n  const [fullName, setfullName] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Basic client-side validation\n    if (!fullName || !password) {\n      notify('Both fullName and password are required');\n      return;\n    }\n    try {\n      // Call the server endpoint for login\n      //   alert(\"here\")\n      const response = await fetch('http://localhost:4000/auth/admin_sign_in', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fullName,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Assuming the server sends a token on successful login\n        console.log('Login successful. Token:', data.token);\n        // navigate(\"/\");\n\n        localStorage.setItem(\"token\", data.token);\n        navigate('/admin/home');\n        // Perform any other actions needed on successful login\n      } else {\n        // Handle login error\n        notify('Invalid Name or password');\n        // Optionally, shownotify or update the UI to indicate login failure\n      }\n    } catch (error) {\n      notify('Error during login:' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"Admin Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleLogin,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"username\",\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  class: \"form-control\",\n                  id: \"username\",\n                  value: fullName,\n                  onChange: e => setfullName(e.target.value),\n                  placeholder: \"Enter your username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"password\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  class: \"form-control\",\n                  id: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  placeholder: \"Enter your password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                class: \"btn btn-primary\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminLogin, \"xJIZLv8pLQRlaJ2UioRwvDFTq5g=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","Link","redirect","ToastContainer","toast","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","notify","message","error","navigate","fullName","setfullName","password","setPassword","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","token","localStorage","setItem","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","for","type","id","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/jinendramalekar/Desktop/Pianest/frontend/pianest/src/components/AdminLogin.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { Link, redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function AdminLogin() {\n    const notify = (message) => toast.error(message);\n    const navigate = useNavigate();\n    const [fullName, setfullName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleLogin = async (e) => {\n        \n        e.preventDefault();\n        \n\n        // Basic client-side validation\n        if (!fullName || !password) {\n          notify('Both fullName and password are required');\n          return;\n        }\n    \n        try {\n          // Call the server endpoint for login\n        //   alert(\"here\")\n          const response = await fetch('http://localhost:4000/auth/admin_sign_in', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              fullName,\n              password,\n            }),\n          });\n    \n          \n    \n          if (response.ok) {\n            const data = await response.json();\n            // Assuming the server sends a token on successful login\n            console.log('Login successful. Token:', data.token);\n            // navigate(\"/\");\n            \n            localStorage.setItem(\"token\",data.token)\n            navigate('/admin/home')\n            // Perform any other actions needed on successful login\n          } \n          else {\n    \n            // Handle login error\n            notify('Invalid Name or password');\n            // Optionally, shownotify or update the UI to indicate login failure\n          }\n        } catch (error) {\n          notify('Error during login:'+ error.message);\n        }\n      };\n    \n    \n  return (\n    <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Admin Login\n                </div>\n                <div class=\"card-body\">\n                    <form onSubmit={handleLogin}>\n                        <div class=\"form-group\">\n                            <label for=\"username\">Username:</label>\n                            <input type=\"text\" class=\"form-control\" id=\"username\" value={fullName} onChange={(e)=>setfullName(e.target.value)} placeholder=\"Enter your username\" />\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"password\">Password:</label>\n                            <input type=\"password\"  class=\"form-control\" id=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Enter your password\" / >\n                        </div>\n                        <button type=\"submit\"    class=\"btn btn-primary\">Login</button>\n                        <br/>\n            \n\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ToastContainer></ToastContainer>\n</div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}